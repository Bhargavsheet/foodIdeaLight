{"ast":null,"code":"export default {\n  reorder: function (source, destination, taskDataArr) {\n    console.log(\"reorder => \", source, destination, taskDataArr);\n    let taskData = [...taskDataArr];\n\n    //     //_____________________________________________________________Source data\n    let sourceGroupIndex = taskData.findIndex((val, index) => {\n      // iterate and find \"Today\" (or other) index in list data\n      return val.groupName === source.droppableId;\n    });\n    let draggedTask = taskData[sourceGroupIndex].tasks.find((val, index) => {\n      // Get specific task object based on index\n      return source.index === index;\n    }); // dragged object\n\n    let sourceListCopyWithElementRemoved = taskData[sourceGroupIndex].tasks.filter((val, index) => {\n      return index !== source.index; // removes dragged element from array\n    });\n\n    // //__________________________________________________________________Destination data\n\n    let destinationGroupIndex = taskData.findIndex((val, index) => {\n      // iterate and find \"Tomorrow\" (or other) index in list data\n      return val.groupName === destination.droppableId;\n    });\n    taskData[destinationGroupIndex].tasks.splice(destination.index, 0, draggedTask); // insert dragged item to new place\n    taskData[sourceGroupIndex].tasks = sourceListCopyWithElementRemoved;\n    return taskData;\n  }\n};","map":{"version":3,"names":["reorder","source","destination","taskDataArr","console","log","taskData","sourceGroupIndex","findIndex","val","index","groupName","droppableId","draggedTask","tasks","find","sourceListCopyWithElementRemoved","filter","destinationGroupIndex","splice"],"sources":["/var/www/html/react2/src/helper_functions.js"],"sourcesContent":["export default {\n    reorder: function(source, destination, taskDataArr) {\n      console.log(\"reorder => \", source, destination, taskDataArr);\n      let taskData = [...taskDataArr];\n  \n      //     //_____________________________________________________________Source data\n      let sourceGroupIndex = taskData.findIndex((val, index) => {\n        // iterate and find \"Today\" (or other) index in list data\n        return val.groupName === source.droppableId;\n      });\n  \n      let draggedTask = taskData[sourceGroupIndex].tasks.find((val, index) => {\n        // Get specific task object based on index\n        return source.index === index;\n      }); // dragged object\n  \n      let sourceListCopyWithElementRemoved = taskData[\n        sourceGroupIndex\n      ].tasks.filter((val, index) => {\n        return index !== source.index; // removes dragged element from array\n      });\n  \n      // //__________________________________________________________________Destination data\n  \n      let destinationGroupIndex = taskData.findIndex((val, index) => {\n        // iterate and find \"Tomorrow\" (or other) index in list data\n        return val.groupName === destination.droppableId;\n      });\n  \n      taskData[destinationGroupIndex].tasks.splice(\n        destination.index,\n        0,\n        draggedTask\n      ); // insert dragged item to new place\n      taskData[sourceGroupIndex].tasks = sourceListCopyWithElementRemoved;\n  \n      return taskData;\n    }\n  };\n  "],"mappings":"AAAA,eAAe;EACXA,OAAO,EAAE,SAAAA,CAASC,MAAM,EAAEC,WAAW,EAAEC,WAAW,EAAE;IAClDC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,MAAM,EAAEC,WAAW,EAAEC,WAAW,CAAC;IAC5D,IAAIG,QAAQ,GAAG,CAAC,GAAGH,WAAW,CAAC;;IAE/B;IACA,IAAII,gBAAgB,GAAGD,QAAQ,CAACE,SAAS,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MACxD;MACA,OAAOD,GAAG,CAACE,SAAS,KAAKV,MAAM,CAACW,WAAW;IAC7C,CAAC,CAAC;IAEF,IAAIC,WAAW,GAAGP,QAAQ,CAACC,gBAAgB,CAAC,CAACO,KAAK,CAACC,IAAI,CAAC,CAACN,GAAG,EAAEC,KAAK,KAAK;MACtE;MACA,OAAOT,MAAM,CAACS,KAAK,KAAKA,KAAK;IAC/B,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAIM,gCAAgC,GAAGV,QAAQ,CAC7CC,gBAAgB,CACjB,CAACO,KAAK,CAACG,MAAM,CAAC,CAACR,GAAG,EAAEC,KAAK,KAAK;MAC7B,OAAOA,KAAK,KAAKT,MAAM,CAACS,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC;;IAEF;;IAEA,IAAIQ,qBAAqB,GAAGZ,QAAQ,CAACE,SAAS,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC7D;MACA,OAAOD,GAAG,CAACE,SAAS,KAAKT,WAAW,CAACU,WAAW;IAClD,CAAC,CAAC;IAEFN,QAAQ,CAACY,qBAAqB,CAAC,CAACJ,KAAK,CAACK,MAAM,CAC1CjB,WAAW,CAACQ,KAAK,EACjB,CAAC,EACDG,WACF,CAAC,CAAC,CAAC;IACHP,QAAQ,CAACC,gBAAgB,CAAC,CAACO,KAAK,GAAGE,gCAAgC;IAEnE,OAAOV,QAAQ;EACjB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}