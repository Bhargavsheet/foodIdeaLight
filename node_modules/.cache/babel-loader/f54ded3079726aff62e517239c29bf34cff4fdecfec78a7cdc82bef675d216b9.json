{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-foodidealight/src/Components/Restaurants/Edit.js\",\n  _s = $RefreshSig$();\n// Filename - Edit.js\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport array from \"./array\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport CommonForm from \"./CommonForm\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Edit() {\n  _s();\n  const [id, setId] = useState(localStorage.getItem(\"id\"));\n  let index = array.map(function (e) {\n    return e.id;\n  }).indexOf(id);\n  const [errors, setErrors] = useState({});\n  const [formData, setFormData] = useState({\n    name: localStorage.getItem(\"Name\"),\n    age: localStorage.getItem(\"Age\"),\n    description: localStorage.getItem(\"Description\")\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newErrors = validateForm(formData);\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length === 0) {\n      // Form submission logic here\n\n      // Getting an index of an array\n      let a = array[index];\n      console.log('bhargavhere11', array);\n      // Putting the value from the input\n      // textfield and replacing it from\n      // existing for updation\n      a.Name = formData.name;\n      a.Age = formData.age;\n      a.Description = formData.description;\n\n      // Redirecting to main page\n      history(\"/\");\n      console.log('Form submitted successfully!');\n    } else {\n      console.log(`Form submission failed\n             due to validation errors.`);\n    }\n  };\n  const validateForm = data => {\n    const errors = {};\n    if (!data.name.trim()) {\n      errors.name = 'Name is required';\n    }\n    if (!data.description.trim()) {\n      errors.description = 'Description is required';\n    }\n    if (!data.age.trim()) {\n      errors.age = 'Age is required';\n    }\n\n    // if (!data.email.trim()) {\n    //     errors.email = 'Email is required';\n    // } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\n    //     errors.email = 'Email is invalid';\n    // }\n\n    // if (!data.password) {\n    //     errors.password = 'Password is required';\n    // } else if (data.password.length < 8) {\n    //     errors.password = `Password must be at \n    //     least 8 characters long`;\n    // }\n\n    // if (data.confirmPassword !== data.password) {\n    //     errors.confirmPassword = 'Passwords do not match';\n    // }\n\n    return errors;\n  };\n  const handleChange = e => {\n    //    let newData = []\n    const {\n      name,\n      value\n    } = e.target;\n    // newData[name]= value\n    // validateForm(newData)\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  let history = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CommonForm, {\n      type: \"edit\",\n      handleSubmit: handleSubmit,\n      errors: errors,\n      handleChange: handleChange,\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }, this);\n}\n_s(Edit, \"6/1GTpXEuB/WHJgwOyIrRIgAVuA=\", false, function () {\n  return [useNavigate];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","Container","array","Link","useNavigate","CommonForm","v4","uuid","jsxDEV","_jsxDEV","Edit","_s","id","setId","localStorage","getItem","index","map","e","indexOf","errors","setErrors","formData","setFormData","name","age","description","handleSubmit","preventDefault","newErrors","validateForm","Object","keys","length","a","console","log","Name","Age","Description","history","data","trim","handleChange","value","target","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/react-foodidealight/src/Components/Restaurants/Edit.js"],"sourcesContent":["// Filename - Edit.js\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport array from \"./array\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport CommonForm from \"./CommonForm\";\nimport { v4 as uuid } from \"uuid\";\n\n\nfunction Edit() {\n\tconst [id, setId] = useState(localStorage.getItem(\"id\"));\n\tlet index = array.map(function (e) {return e.id;}).indexOf(id);\n    const [errors, setErrors] = useState({});\n\tconst [formData, setFormData] = useState({\n        name: localStorage.getItem(\"Name\"),\n        age: localStorage.getItem(\"Age\"),\n        description: localStorage.getItem(\"Description\")\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newErrors = validateForm(formData);\n        setErrors(newErrors);\n \n        if (Object.keys(newErrors).length === 0) {\n            // Form submission logic here\n\n\t\t\t// Getting an index of an array\n\t\t\tlet a = array[index];\n\t\t\tconsole.log('bhargavhere11', array)\n\t\t\t// Putting the value from the input\n\t\t\t// textfield and replacing it from\n\t\t\t// existing for updation\n\t\t\ta.Name = formData.name;\n\t\t\ta.Age = formData.age;\n\t\t\ta.Description = formData.description;\n\t\t\n\n\t\t\t// Redirecting to main page\n\t\t\thistory(\"/\");\n\n            console.log('Form submitted successfully!');\n        } else {\n            console.log(`Form submission failed\n             due to validation errors.`);\n        }\n    };\n\n    const validateForm = (data) => {\n        const errors = {}; \n\n        if (!data.name.trim()){\n            errors.name = 'Name is required';\n        }\n\n        if (!data.description.trim()) {\n            errors.description = 'Description is required';\n        }\n\n        if (!data.age.trim()) {\n            errors.age = 'Age is required';\n        }\n \n        // if (!data.email.trim()) {\n        //     errors.email = 'Email is required';\n        // } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\n        //     errors.email = 'Email is invalid';\n        // }\n \n        // if (!data.password) {\n        //     errors.password = 'Password is required';\n        // } else if (data.password.length < 8) {\n        //     errors.password = `Password must be at \n        //     least 8 characters long`;\n        // }\n \n        // if (data.confirmPassword !== data.password) {\n        //     errors.confirmPassword = 'Passwords do not match';\n        // }\n \n        return errors;\n    };\n\n\n \n    const handleChange = (e) => {\n    //    let newData = []\n        const { name, value } = e.target;\n        // newData[name]= value\n        // validateForm(newData)\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n\tlet history = useNavigate();\n\n\treturn (\n\t\t<Container>\n            <CommonForm \n                type={\"edit\"}\n                handleSubmit={handleSubmit}\n                errors={errors}\n                handleChange={handleChange}\n                formData={formData}\n            />\n        </Container>\n\t);\n}\n\nexport default Edit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}