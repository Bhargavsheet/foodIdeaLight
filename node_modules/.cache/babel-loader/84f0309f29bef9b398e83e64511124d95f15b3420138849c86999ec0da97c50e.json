{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-foodidealight/src/Components/Restaurants/Create.js\";\n// Filename - components/Create.js\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport array from \"./array\";\nimport { v4 as uuid } from \"uuid\";\nimport { useNavigate } from \"react-router-dom\";\nimport CommonForm from \"./CommonForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Create() {\n  // const [errors, setErrors] = useState({});\n  // Making usestate for setting and\n  // fetching a value in jsx\n  // const [name, setName] = useState(\"\");\n  // const [age, setAge] = useState(\"\");\n  // const [description, setDescription] = useState(\"\")\n\n  // Using useNavigation for redirecting to pages\n  // let history = useNavigate();\n\n  // Function for creating a post/entry\n  // const handelSubmit = (e) => {\n  // \te.preventDefault(); // Prevent reload\n\n  // \t// const ids = uuid(); // Creating unique id\n  // \t// let uniqueId = ids.slice(0, 8); // Slicing unique id\n\n  // \t// // Fetching a value from usestate and\n  // \t// // pushing to javascript object\n  // \t// let a = name,\n  // \t// \tb = age,\n  //     //     c = description;\n  // \t// if (name == \"\" || age == \"\" || description == \"\") {\n  // \t// \talert(\"invalid input\");\n  // \t// \treturn;\n  // \t// }\n  // \t// array.push({ id: uniqueId, Name: a, Description: c, Age: b});\n\n  // \t// // Redirecting to home page after creation done\n  // \t// history(\"/\");\n  // };\n\n  // const [formData, setFormData] = useState({\n  //     name: '',\n  //     age: '',\n  //     description: ''\n  // });\n\n  // const validateForm = (data) => {\n  //     const errors = {}; \n\n  //     if (!data.name.trim()){\n  //         errors.name = 'Name is required';\n  //     }\n\n  //     if (!data.description.trim()) {\n  //         errors.description = 'Description is required';\n  //     }\n\n  //     if (!data.age.trim()) {\n  //         errors.age = 'Age is required';\n  //     }\n\n  //     // if (!data.email.trim()) {\n  //     //     errors.email = 'Email is required';\n  //     // } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\n  //     //     errors.email = 'Email is invalid';\n  //     // }\n\n  //     // if (!data.password) {\n  //     //     errors.password = 'Password is required';\n  //     // } else if (data.password.length < 8) {\n  //     //     errors.password = `Password must be at \n  //     //     least 8 characters long`;\n  //     // }\n\n  //     // if (data.confirmPassword !== data.password) {\n  //     //     errors.confirmPassword = 'Passwords do not match';\n  //     // }\n\n  //     return errors;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(CommonForm, {\n      type: \"add\",\n      errors: errors,\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","Button","Form","Container","array","v4","uuid","useNavigate","CommonForm","jsxDEV","_jsxDEV","Create","children","type","errors","formData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/react-foodidealight/src/Components/Restaurants/Create.js"],"sourcesContent":["// Filename - components/Create.js\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport array from \"./array\";\nimport { v4 as uuid } from \"uuid\";\nimport { useNavigate } from \"react-router-dom\";\nimport CommonForm from \"./CommonForm\";\n\nfunction Create() {\n\n    // const [errors, setErrors] = useState({});\n\t// Making usestate for setting and\n\t// fetching a value in jsx\n\t// const [name, setName] = useState(\"\");\n\t// const [age, setAge] = useState(\"\");\n    // const [description, setDescription] = useState(\"\")\n\n\t// Using useNavigation for redirecting to pages\n\t// let history = useNavigate();\n\n\t// Function for creating a post/entry\n\t// const handelSubmit = (e) => {\n\t// \te.preventDefault(); // Prevent reload\n\n\t// \t// const ids = uuid(); // Creating unique id\n\t// \t// let uniqueId = ids.slice(0, 8); // Slicing unique id\n\n\t// \t// // Fetching a value from usestate and\n\t// \t// // pushing to javascript object\n\t// \t// let a = name,\n\t// \t// \tb = age,\n    //     //     c = description;\n\t// \t// if (name == \"\" || age == \"\" || description == \"\") {\n\t// \t// \talert(\"invalid input\");\n\t// \t// \treturn;\n\t// \t// }\n\t// \t// array.push({ id: uniqueId, Name: a, Description: c, Age: b});\n\n\t// \t// // Redirecting to home page after creation done\n\t// \t// history(\"/\");\n\t// };\n\n\n\n    // const [formData, setFormData] = useState({\n    //     name: '',\n    //     age: '',\n    //     description: ''\n    // });\n\n    // const validateForm = (data) => {\n    //     const errors = {}; \n\n    //     if (!data.name.trim()){\n    //         errors.name = 'Name is required';\n    //     }\n\n    //     if (!data.description.trim()) {\n    //         errors.description = 'Description is required';\n    //     }\n\n    //     if (!data.age.trim()) {\n    //         errors.age = 'Age is required';\n    //     }\n \n    //     // if (!data.email.trim()) {\n    //     //     errors.email = 'Email is required';\n    //     // } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\n    //     //     errors.email = 'Email is invalid';\n    //     // }\n \n    //     // if (!data.password) {\n    //     //     errors.password = 'Password is required';\n    //     // } else if (data.password.length < 8) {\n    //     //     errors.password = `Password must be at \n    //     //     least 8 characters long`;\n    //     // }\n \n    //     // if (data.confirmPassword !== data.password) {\n    //     //     errors.confirmPassword = 'Passwords do not match';\n    //     // }\n \n    //     return errors;\n    // };\n\n\treturn (\n        <Container>\n            <CommonForm \n                type={\"add\"}\n                errors={errors}\n                formData={formData}\n            />\n        </Container>\n\t);\n}\n\nexport default Create;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AACzD,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,MAAMA,CAAA,EAAG;EAEd;EACH;EACA;EACA;EACA;EACG;;EAEH;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACG;EACH;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAIG;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEH,oBACOD,OAAA,CAACP,SAAS;IAAAS,QAAA,eACNF,OAAA,CAACF,UAAU;MACPK,IAAI,EAAE,KAAM;MACZC,MAAM,EAAEA,MAAO;MACfC,QAAQ,EAAEA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;AAACC,EAAA,GAtFQT,MAAM;AAwFf,eAAeA,MAAM;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}