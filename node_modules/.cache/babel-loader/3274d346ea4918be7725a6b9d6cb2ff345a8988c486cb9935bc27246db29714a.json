{"ast":null,"code":"export const getRestaurantData = () => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'Accept': 'application/json'\n    }\n  };\n  const url = \"https://66988ec62069c438cd6f1af8.mockapi.io/api/restaurantlist/RestaurantData\";\n  fetch(`${url}`, requestOptions).then(async response => {\n    var _response$headers$get;\n    const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('applications/json');\n    const data = isJson && (await response.json());\n    console.log('bhargavhere', data);\n    if (!response.ok) {\n      return Promise.reject(data === null || data === void 0 ? void 0 : data.error);\n    }\n    return data;\n  }).then(response => {\n    console.log('bhargavhere2', response);\n    if (response) {\n      return Promise.resolve(response);\n    }\n  }).catch(error => {\n    if (error) {\n      return Promise.reject(error);\n    }\n  });\n};","map":{"version":3,"names":["getRestaurantData","requestOptions","method","headers","url","fetch","then","response","_response$headers$get","isJson","get","includes","data","json","console","log","ok","Promise","reject","error","resolve","catch"],"sources":["/var/www/html/react-foodidealight/src/Components/Restaurants/service.js"],"sourcesContent":["export const getRestaurantData = () => {\n    const requestOptions = {\n        method: 'GET',\n        headers : {'content-type' : 'application/json', 'Accept' : 'application/json'}\n    }\n    const url = \"https://66988ec62069c438cd6f1af8.mockapi.io/api/restaurantlist/RestaurantData\";\n\n    fetch(`${url}`, requestOptions)\n        .then( async (response) => {\n            const isJson = response.headers.get('content-type')?.includes('applications/json')\n            const data = isJson && await response.json()\n            console.log('bhargavhere', data)\n\n            if(!response.ok){\n                return Promise.reject(data?.error)\n            }\n            return data;\n        })\n        .then((response) => {\n            console.log('bhargavhere2', response)\n\n            if(response){\n                return Promise.resolve(response);\n            }\n        })\n        .catch((error) => {\n            if(error){\n                return Promise.reject(error)\n            }\n        });\n}"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAGA,CAAA,KAAM;EACnC,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAG;MAAC,cAAc,EAAG,kBAAkB;MAAE,QAAQ,EAAG;IAAkB;EACjF,CAAC;EACD,MAAMC,GAAG,GAAG,+EAA+E;EAE3FC,KAAK,CAAE,GAAED,GAAI,EAAC,EAAEH,cAAc,CAAC,CAC1BK,IAAI,CAAE,MAAOC,QAAQ,IAAK;IAAA,IAAAC,qBAAA;IACvB,MAAMC,MAAM,IAAAD,qBAAA,GAAGD,QAAQ,CAACJ,OAAO,CAACO,GAAG,CAAC,cAAc,CAAC,cAAAF,qBAAA,uBAApCA,qBAAA,CAAsCG,QAAQ,CAAC,mBAAmB,CAAC;IAClF,MAAMC,IAAI,GAAGH,MAAM,KAAI,MAAMF,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC5CC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,IAAI,CAAC;IAEhC,IAAG,CAACL,QAAQ,CAACS,EAAE,EAAC;MACZ,OAAOC,OAAO,CAACC,MAAM,CAACN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,KAAK,CAAC;IACtC;IACA,OAAOP,IAAI;EACf,CAAC,CAAC,CACDN,IAAI,CAAEC,QAAQ,IAAK;IAChBO,OAAO,CAACC,GAAG,CAAC,cAAc,EAAER,QAAQ,CAAC;IAErC,IAAGA,QAAQ,EAAC;MACR,OAAOU,OAAO,CAACG,OAAO,CAACb,QAAQ,CAAC;IACpC;EACJ,CAAC,CAAC,CACDc,KAAK,CAAEF,KAAK,IAAK;IACd,IAAGA,KAAK,EAAC;MACL,OAAOF,OAAO,CAACC,MAAM,CAACC,KAAK,CAAC;IAChC;EACJ,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}